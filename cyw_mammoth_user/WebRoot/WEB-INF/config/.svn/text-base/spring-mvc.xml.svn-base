<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task-3.2.xsd
       " ><!-- 启动配置懒加载   default-lazy-init="true" -->

	<!-- 自动扫描的包名   default-lazy-init="true" -->
	<!--<context:component-scan base-package="com.zoomoor" />-->
	<context:component-scan base-package="com.*">  
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />  
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />  
 	</context:component-scan>

	<!-- 默认的注解映射的支持 -->
	<mvc:annotation-driven>
	 <mvc:message-converters register-defaults="true"> 
        <bean class="com.cyw.common.util.UTF8StringHttpMessageConverter"/> 
     </mvc:message-converters> 
	</mvc:annotation-driven>

	<!-- 对静态资源文件的访问 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />	
      <!-- 定义无Controller的path<->view直接映射 -->
	<mvc:view-controller path="/" view-name="redirect:/main"/>
		<!-- 将无法mapping到Controller的path交给default servlet handler处理 -->		
	<mvc:default-servlet-handler/>
	<!-- SpringMVC上传文件时,需配置MultipartResolver处理器 指定所上传文件的总大小不能超过3MB......注意maxUploadSize属性的限制不是针对单个文件,而是所有文件的容量之和MultipartListenerResolver-->
    <bean id="multipartResolver" class="com.cyw.common.upload.MultipartListenerResolver">
        <property name="maxUploadSize" value="3145728000"/>
    </bean>
    <!-- SpringMVC在超出上传文件限制时,会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的,而且此时还没有进入到Controller方法中 -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!-- 遇到MaxUploadSizeExceededException异常时,自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">/znyt/error_fileupload.jsp</prop>
            </props>
        </property>
    </bean>
	<!-- 视图解释类 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/mammoth_sys/" />
		<property name="suffix" value=".jsp" />
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	</bean>
	<!-- 上传的图片缓存1个月，其他js，css，img资源缓存一年 -->  
    <mvc:resources mapping="/upload/**" location="/upload/" cache-period="2592000"/>  
    <mvc:resources mapping="/css/**" location="/css/" cache-period="31536000"/>  
    <mvc:resources mapping="/js/**" location="/js/" cache-period="31536000"/>    
    <mvc:resources mapping="/img/**" location="/img/" cache-period="31536000"/>
    <!-- task任务扫描注解 -->
    <task:annotation-driven/>  
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean id="LoginInterceptor" class="com.cyw.common.web.intercepter.LoginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>  
    	<!-- 支持 Shiro对Controller的方法级AOP安全控制 begin-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
</beans>